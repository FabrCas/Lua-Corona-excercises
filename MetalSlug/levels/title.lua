-- Generated by Level Director X v1.0.4 on Mon Aug 1 16:56:03 2016 --
require("lib.LD_HelperX")
local M={}
-----------------------------------
function M:loadAssets()
-----------------------------------
	local assets={}
	assets.spriteSheetData={}
	return assets
end -- loadAssets 

------------------------------------------
function M:createLevel(LD_Helper_Instance)
------------------------------------------
	local instance=LD_Helper_Instance
	local objProps={}
	local level={}
    local obj=nil
	local k=0
	local objects = nil 
	if (instance.viewGroup == nil) then
		level.view=display.newGroup() 
	else
		level.view=instance.viewGroup
	end
	level.view.anchorChildren =false 
	display.setDefault( 'background',0/255,0/255,0/255,255/255)
	display.setDefault( "anchorX",0.5 )
	display.setDefault( "anchorY",0.5 )	
	display.setDrawMode("wireframe",false)
	level.name='title' 
	-- Load Assets
	level.assets=self:loadAssets()
	-- Physics properties
	physics.setGravity(0,9.8) 
	physics.setDrawMode('normal')
	physics.setPositionIterations(8)	
	physics.setVelocityIterations(3)	
	level.parallaxEnabled=false
	-- Layers --
	level.layers={} 
	---- layer1 ------------------------------------------------------------------------------------
	level.layers['layer1']={} 
	level.layers['layer1'].view=display.newGroup() 
	level.layers['layer1'].name='layer1' 
	if (level.parallaxEnabled) then
		level.layers['layer1'].speed={x=0,y=0}
		level.layers['layer1'].repeated=false
		level.layers['layer1'].cullingMethod=0
	else
		level.layers['layer1'].cullingMethod=0 
	end
	level.layers['layer1'].objects={} 
	objects = {
	{name='text_1',objType='LDText',class='',width=669,height=87,x=173,y=111,xScale=1*1,yScale=1*1,assetName='',
		rotation=0,enableDrag=false,anchorX=0,anchorY=0,alpha=1,isVisible=true,blendMode='normal',
		textProps={text='Metal Slug Template',font='Arial',size=62,embossed=true,embossHighlightColorR=254/255,embossHighlightColorG=0/255,embossHighlightColorB=0/255,embossHighlightColorA=255/255,embossShadowColorR=255/255,embossShadowColorG=255/255,embossShadowColorB=255/255,embossShadowColorA=255/255},
		styleProps={radius=334.5,cornerRadius=0,strokeWidth=1,strokeColorR=255/255,strokeColorG=255/255,strokeColorB=255/255,strokeColorA=255/255,fillColorR=0/255,fillColorG=0/255,fillColorB=0/255,fillColorA=0/255},
		fillProps ={fillType=0,fillAssetName='',fillFrame=0},
		gradientProps={direction=0,fillColorR=0/255,fillColorG=0/255,fillColorB=0/255,fillColorA=0/255},
		userProps = {},
		},
	{name='btnPlay',objType='LDButton',class='',width=166,height=62,x=505,y=480,xScale=1*1,yScale=1*1,assetName='',
		textProps={text='PLAY',font='Arial',size=18,embossed=false,embossHighlightColorR=255/255,embossHighlightColorG=255/255,embossHighlightColorB=255/255,embossHighlightColorA=255/255,embossShadowColorR=255/255,embossShadowColorG=255/255,embossShadowColorB=255/255,embossShadowColorA=255/255},
		styleProps={radius=83,cornerRadius=0,strokeWidth=1,strokeColorR=255/255,strokeColorG=255/255,strokeColorB=255/255,strokeColorA=255/255,fillColorR=0/255,fillColorG=200/255,fillColorB=100/255,fillColorA=255/255},
		fillProps ={fillType=0,fillAssetName='',fillFrame=0},
		gradientProps={direction=0,fillColorR=0/255,fillColorG=200/255,fillColorB=100/255,fillColorA=255/255},
		btnProps={textColorR=255/255,textColorG=255/255,textColorB=255/255,textColorA=255/255,fillType=0,fillAssetName='',fillFrame=0,styleProps	= {cornerRadius=0,strokeWidth=1,strokeColorR=255/255,strokeColorG=255/255,strokeColorB=255/255,strokeColorA=255/255,fillColorR=0/255,fillColorG=100/255,fillColorB=0/255,fillColorA=255/255}},
		userProps = {},
		},
	}
	-- add objects to layer
	for k, objProps in pairs (objects) do
		obj = instance:createObject(level.layers['layer1'], objProps ,level.assets)
		if (objProps.userProps) then
			obj.property = {}
			for u, userProp in pairs (objProps.userProps) do
				obj.property[userProp.name] = userProp.value 
			end 
		end 
	end
	instance:insertLayer(level,level.layers['layer1'])
	--level.ldVersion=1.0.4	-- Level Director Version
	-- Parallax (after layers)
	level.canvasWidth=960
	level.canvasHeight=640
	if level.parallaxEnabled then
		level.parallaxInfinite=false
		level.parallaxDamping=1
		instance:createParallax(level)
	end
	return level
end -- createLevel
return M

